package com.intfocus.template.model.gen;

import com.intfocus.template.model.entity.Collection;
import com.intfocus.template.model.entity.PushMsgBean;
import com.intfocus.template.model.entity.Report;
import com.intfocus.template.model.entity.Source;
import com.intfocus.template.model.response.attention.AttentionItem;
import com.intfocus.template.model.response.attention.AttentionedItem;
import com.intfocus.template.subject.seven.bean.ConcernFilterBean;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import java.util.Map;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig concernFilterBeanDaoConfig;
    private final DaoConfig attentionedItemDaoConfig;
    private final DaoConfig attentionItemDaoConfig;
    private final DaoConfig collectionDaoConfig;
    private final DaoConfig pushMsgBeanDaoConfig;
    private final DaoConfig sourceDaoConfig;
    private final DaoConfig reportDaoConfig;

    private final ConcernFilterBeanDao concernFilterBeanDao;
    private final AttentionedItemDao attentionedItemDao;
    private final AttentionItemDao attentionItemDao;
    private final CollectionDao collectionDao;
    private final PushMsgBeanDao pushMsgBeanDao;
    private final SourceDao sourceDao;
    private final ReportDao reportDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        concernFilterBeanDaoConfig = daoConfigMap.get(ConcernFilterBeanDao.class).clone();
        concernFilterBeanDaoConfig.initIdentityScope(type);

        attentionedItemDaoConfig = daoConfigMap.get(AttentionedItemDao.class).clone();
        attentionedItemDaoConfig.initIdentityScope(type);

        attentionItemDaoConfig = daoConfigMap.get(AttentionItemDao.class).clone();
        attentionItemDaoConfig.initIdentityScope(type);

        collectionDaoConfig = daoConfigMap.get(CollectionDao.class).clone();
        collectionDaoConfig.initIdentityScope(type);

        pushMsgBeanDaoConfig = daoConfigMap.get(PushMsgBeanDao.class).clone();
        pushMsgBeanDaoConfig.initIdentityScope(type);

        sourceDaoConfig = daoConfigMap.get(SourceDao.class).clone();
        sourceDaoConfig.initIdentityScope(type);

        reportDaoConfig = daoConfigMap.get(ReportDao.class).clone();
        reportDaoConfig.initIdentityScope(type);

        concernFilterBeanDao = new ConcernFilterBeanDao(concernFilterBeanDaoConfig, this);
        attentionedItemDao = new AttentionedItemDao(attentionedItemDaoConfig, this);
        attentionItemDao = new AttentionItemDao(attentionItemDaoConfig, this);
        collectionDao = new CollectionDao(collectionDaoConfig, this);
        pushMsgBeanDao = new PushMsgBeanDao(pushMsgBeanDaoConfig, this);
        sourceDao = new SourceDao(sourceDaoConfig, this);
        reportDao = new ReportDao(reportDaoConfig, this);

        registerDao(ConcernFilterBean.class, concernFilterBeanDao);
        registerDao(AttentionedItem.class, attentionedItemDao);
        registerDao(AttentionItem.class, attentionItemDao);
        registerDao(Collection.class, collectionDao);
        registerDao(PushMsgBean.class, pushMsgBeanDao);
        registerDao(Source.class, sourceDao);
        registerDao(Report.class, reportDao);
    }
    
    public void clear() {
        concernFilterBeanDaoConfig.clearIdentityScope();
        attentionedItemDaoConfig.clearIdentityScope();
        attentionItemDaoConfig.clearIdentityScope();
        collectionDaoConfig.clearIdentityScope();
        pushMsgBeanDaoConfig.clearIdentityScope();
        sourceDaoConfig.clearIdentityScope();
        reportDaoConfig.clearIdentityScope();
    }

    public ConcernFilterBeanDao getConcernFilterBeanDao() {
        return concernFilterBeanDao;
    }

    public AttentionedItemDao getAttentionedItemDao() {
        return attentionedItemDao;
    }

    public AttentionItemDao getAttentionItemDao() {
        return attentionItemDao;
    }

    public CollectionDao getCollectionDao() {
        return collectionDao;
    }

    public PushMsgBeanDao getPushMsgBeanDao() {
        return pushMsgBeanDao;
    }

    public SourceDao getSourceDao() {
        return sourceDao;
    }

    public ReportDao getReportDao() {
        return reportDao;
    }

}
